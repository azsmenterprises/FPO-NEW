{"version":3,"sources":["./node_modules/ngx-filter-pipe/__ivy_ngcc__/esm2015/ngx-filter-pipe.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;;AAE3D;AACA;AACA,cAAc,WAAW;AACzB;AACwC;AACxC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,gCAAgC,EAAE,UAAU,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF,mBAAmB,0DAAmB,EAAE,kDAAkD;AAC1F,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,wBAAwB,8DAAuB,EAAE,yBAAyB;AAC1E,wBAAwB,8DAAuB,EAAE,gDAAgD,sCAAsC,EAAE,2BAA2B;AACpK;AACA;AACA,cAAc,oDAAoD,gEAAyB,oBAAoB,oDAAoD,EAAE,EAAE;AACvK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEwC;;AAExC,2C","file":"common.js","sourcesContent":["import { Pipe, Injectable, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass FilterPipe {\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    static isFoundOnWalking(value, key) {\n        let /** @type {?} */ walker = value;\n        let /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNumber(value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    }\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    static getValue(value) {\n        return typeof value === 'function' ? value() : value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByString(filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return value => !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByBoolean(filter) {\n        return value => Boolean(value) === filter;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByObject(filter) {\n        return value => {\n            for (const /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    isMatching(filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    }\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByOr(filter) {\n        return (value) => {\n            const /** @type {?} */ length = filter.length;\n            const /** @type {?} */ arrayComparison = (i) => value.indexOf(filter[i]) !== -1;\n            const /** @type {?} */ otherComparison = (i) => this.isMatching(filter[i], value);\n            const /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (let /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    filterDefault(filter) {\n        return (value) => filter === undefined || filter == value;\n    }\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    transform(array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    }\n}\nFilterPipe.ɵfac = function FilterPipe_Factory(t) { return new (t || FilterPipe)(); };\nFilterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filterBy\", type: FilterPipe, pure: false });\nFilterPipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FilterPipe, factory: FilterPipe.ɵfac });\n/** @nocollapse */\nFilterPipe.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filterBy',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipeModule {\n}\nFilterPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FilterPipeModule });\nFilterPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FilterPipeModule_Factory(t) { return new (t || FilterPipeModule)(); }, providers: [FilterPipe] });\n/** @nocollapse */\nFilterPipeModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterPipeModule, { declarations: [FilterPipe], exports: [FilterPipe] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FilterPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilterPipeModule, FilterPipe };\n\n//# sourceMappingURL=ngx-filter-pipe.js.map"],"sourceRoot":"webpack:///"}