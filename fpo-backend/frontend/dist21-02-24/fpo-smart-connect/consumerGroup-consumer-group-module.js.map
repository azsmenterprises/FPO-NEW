{"version":3,"sources":["./src/app/consumerGroup/approved-consumers/approved-consumers.component.ts","./src/app/consumerGroup/approved-consumers/approved-consumers.component.html","./src/app/consumerGroup/consumer-group.service.ts","./src/app/consumerGroup/consumer-group.module.ts","./src/app/consumerGroup/cg-dashboard/cg-dashboard.component.ts","./src/app/consumerGroup/cg-dashboard/cg-dashboard.component.html","./src/app/consumerGroup/consumer-group-routing.module.ts","./src/app/consumerGroup/approve-consumer/approve-consumer.component.ts","./src/app/consumerGroup/approve-consumer/approve-consumer.component.html","./src/app/consumerGroup/update-profile/update-profile.component.ts","./src/app/consumerGroup/update-profile/update-profile.component.html","./src/app/consumerGroup/relevant-fpos/relevant-fpos.component.ts","./src/app/consumerGroup/relevant-fpos/relevant-fpos.component.html","./src/app/consumerGroup/add-product/add-product.component.ts","./src/app/consumerGroup/add-product/add-product.component.html","./src/app/consumerGroup/added-products/added-products.component.ts","./src/app/consumerGroup/added-products/added-products.component.html","./src/app/consumerGroup/consumer-registration/consumer-registration.component.ts","./src/app/consumerGroup/consumer-registration/consumer-registration.component.html"],"names":[],"mappings":"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","file":"consumerGroup-consumer-group-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-approved-consumers',\n  templateUrl: './approved-consumers.component.html',\n  styleUrls: ['./approved-consumers.component.css']\n})\nexport class ApprovedConsumersComponent implements OnInit {\n  \n  dataSource: any\n  displayedColumns: string[] = ['slNo', 'dist', 'csName', 'csMail', 'csMobNo', 'csCity', 'BlockUnblock'];\n  pagelength = 0\n  @ViewChild(MatPaginator) paginator: any;\n  @ViewChild(MatSort, { static: true }) sort: any\n  csIndexToApprove:any\n  buttonType:any\n  color:ThemePalette = 'accent'\n  isChecked:any\n\n  constructor(private cgServ: ConsumerGroupService, private appServ: AppService, private toastr: ToastrService) { \n    this.dataSource = new MatTableDataSource()\n  }\n\n  ngOnInit(): void {\n    this.getApprovedConsumerList()\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator; this.dataSource.sort = this.sort\n  }\n\n  getApprovedConsumerList() {\n    this.cgServ.getApprovedConsumerList(this.appServ.cgRefNo).subscribe(\n      data => {\n        this.dataSource.data = data\n        this.pagelength = data.length\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n  blockUnblockConsumer(index:any){\n    let data=this.dataSource.data[index]\n    // data.blockStatus=this.isChecked\n    this.cgServ.blockUnblockConsumer(data).subscribe(\n      data=>{\n        if(data.status>0){\n          this.toastr.success('Success')\n        }else{\n          this.toastr.warning('Unsuccess')\n        }\n      },\n      error=>{\n        this.toastr.error('Error')\n      }\n    )\n    \n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 class=\"h3 mb-0 text-gray-800\"> Approved Consumers</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <!-- <div class=\"card shadow mb-4\"> -->\n                <div class=\"card-header py-3\">\n                    <h6 class=\"m-0 font-weight-bold text-white\"> Consumer details</h6>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length!=0'>\n                    <div style=\"text-align: center;padding: 28px;\">No Data</div>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length==0'>\n                    <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef>Sl No. </th>\n                            <!-- <td mat-cell *matCellDef=\"let i=index\"> {{i+1}} </td> -->\n\n                            <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"dist\">\n                            <th mat-header-cell *matHeaderCellDef> District </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.csDistName}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csName\">\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerName}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMail\">\n                            <th mat-header-cell *matHeaderCellDef> Mail Id </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerMail}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMobNo\">\n                            <th mat-header-cell *matHeaderCellDef> Mobile No. </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerMobilenumber}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csCity\">\n                            <th mat-header-cell *matHeaderCellDef> City </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerCity}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"BlockUnblock\">\n                            <th mat-header-cell *matHeaderCellDef> Action </th>\n                            <td mat-cell *matCellDef=\"let element;let i = index\">\n                                <mat-slide-toggle class=\"example-margin\" [color]=\"color\" [(ngModel)]=\"element.blockStatus\" (change)='blockUnblockConsumer(i)'>\n                                    {{element.blockStatus==true?\"Unblock\":\"Block\"}}\n                                </mat-slide-toggle>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 15,20]\" [length]=\"pagelength\"\n                        showFirstLastButtons></mat-paginator>\n\n                </div>\n\n                <!-- </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal fade\" id=\"approveConsumer\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-info\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">Confirmation</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Are you sure to approve this consumer ?</h5>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                    (click)='approveOrRejectConsumer()'>Approve</button>\n            </div>\n        </div>\n    </div>\n</div> -->","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { data } from 'jquery';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerGroupService {\n\n  sideBarOpen=new Subject<boolean>()\n\n  constructor(private http:HttpClient) { }\n\n  getDashboardData(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getDashboardData/`+cgRefNo)\n  }\n  getDashboardChart(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getDashboardChart/`+cgRefNo)\n  }\n\n  getCropCatagory(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getAllCropCat/`+cgRefNo)\n  }\n\n  loadCrops(cropCat:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/loadCrops/`+cropCat)\n  }\n\n  addProductSubmit(formData:any):Observable<any>{\n    return this.http.post(`${environment.port}/consumerGroup/addProductSubmit`,formData)\n  }\n\n  getConsumerListToApprove(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getConsumerListToApprove/`+cgRefNo)\n  }\n\n  approveConsumer(dataToApprove:any,buttonType:any):Observable<any>{\n    dataToApprove.buttonType=buttonType\n    return this.http.post(`${environment.port}/consumerGroup/approveConsumer`,dataToApprove)\n  }\n\n  getFpoListForCg(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getFpoListForCg/`+cgRefNo)\n  }\n\n  getApprovedConsumerList(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getApprovedConsumerList/`+cgRefNo)\n  }\n\n  blockUnblockConsumer(data:any):Observable<any>{\n    return this.http.post(`${environment.port}/consumerGroup/blockUnblockConsumer`,data)\n  }\n  \n  getProductsAddedList(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getProductsAddedList/`+cgRefNo)\n  }\n  \n  blockUnblockProduct(data:any):Observable<any>{\n    return this.http.post(`${environment.port}/consumerGroup/blockUnblockProduct`,data)\n  }\n\n  getAllDist():Observable<any>{\n    return this.http.get(`${environment.port}/landRoute/getDistricts`)\n  }\n\n  consumerRegisterSubmit(consumerRegisterSubmit:any):Observable<any>{\n    return this.http.post(`${environment.port}/consumerGroup/consumerRegisterSubmit`,consumerRegisterSubmit)\n  }\n  getTrader(cgRefNo:any):Observable<any>{\n    return this.http.get(`${environment.port}/consumerGroup/getTrader/`+cgRefNo)\n  }\n  updateTrader(cgRefNo:any,data:any):Observable<any>{\n    // ////////console.log(cgRefNo,\"service\");\n    \n    return this.http.post(`${environment.port}/consumerGroup/updateTrader/`+cgRefNo,data)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsumerGroupRoutingModule } from './consumer-group-routing.module';\nimport { CgDashboardComponent } from './cg-dashboard/cg-dashboard.component';\nimport { ConsumerRegistrationComponent } from './consumer-registration/consumer-registration.component';\nimport { ApproveConsumerComponent } from './approve-consumer/approve-consumer.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { RelevantFposComponent } from './relevant-fpos/relevant-fpos.component';\nimport { ApprovedConsumersComponent } from './approved-consumers/approved-consumers.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { AddedProductsComponent } from './added-products/added-products.component';\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\n\n\n@NgModule({\n  declarations: [\n    CgDashboardComponent, ConsumerRegistrationComponent, ApproveConsumerComponent, AddProductComponent, RelevantFposComponent, ApprovedConsumersComponent, AddedProductsComponent, UpdateProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    ConsumerGroupRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSlideToggleModule\n  ]\n})\nexport class ConsumerGroupModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\nimport { Chart } from 'chart.js'\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-cg-dashboard',\n  templateUrl: './cg-dashboard.component.html',\n  styleUrls: ['./cg-dashboard.component.css']\n})\nexport class CgDashboardComponent implements OnInit {\n\n  dashboardData: any\n  dataSource: any\n  backgroundColor :any= ['rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)' ];\n  borderColor :any= ['rgba(255, 99, 132,1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)' ];\n  displayedColumns: string[] = ['slNo', 'fpoName', 'address', 'mobNo', 'email', 'yearOfFormation', 'dateOfReg'];\n  serverUrl=`${environment.port}`\n\n\n  constructor(private cgServ: ConsumerGroupService, private appServ: AppService, private toastr: ToastrService) {\n    this.dataSource = new MatTableDataSource()\n    // Chart.register(...registerables);\n  }\n\n  ngOnInit(): void {\n    this.getDashboardData()\n    this.getDashboardChart()\n  }\n  // this.arrayData =\n  loadBarChart(data1:any){\n    \n    var myChart = new Chart('myChart', {\n      type: 'bar',\n      data: {\n        // labels: ['Tomato', 'Potato', 'Cucumber', 'Cauliflower', 'Carrot', 'Radish'],\n        labels: data1.map((a: { Crop_Name: any; }) => a.Crop_Name),\n        datasets: [{\n          label: '',\n          data:data1.map((a: { Unit: any; }) => a.Unit),\n          backgroundColor: this.backgroundColor.slice(0,data1.length),\n          borderColor: this.borderColor.slice(0,data1.lenth),\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          // y: {\n          //   beginAtZero: true\n          // }\n        }\n      }\n    });\n  }\n\n  loadPieChart(data1:any){\n    var piechart = new Chart('piechart', {\n      type: 'doughnut',\n      data: {\n        labels: data1.map((a: { Crop_Name: any; })=>a.Crop_Name),\n        datasets: [{\n          label: 'Products',\n          data:data1.map((a: { minQuantity: any; }) => a.minQuantity),\n          backgroundColor: this.backgroundColor.slice(0,data1.length),\n          borderColor:this.borderColor.slice(0,data1.length),\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          // y: {\n          //   beginAtZero: true\n          // }\n        }\n      }\n    });\n  }\n\n  getDashboardData() {\n    this.cgServ.getDashboardData(this.appServ.cgRefNo).subscribe(\n      data => {\n        if (data) {\n          // ////console.log(data,\"cgdashboard\");\n          this.dashboardData = data\n          this.dataSource.data = data.fpoData\n\n        } else {\n          this.toastr.error('Unexpected error')\n        }\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n  getDashboardChart() {\n    this.cgServ.getDashboardChart(this.appServ.cgRefNo).subscribe(\n      data => {\n        if (data) {\n          ////console.log(data,\"cgdashboar444d\");\n          this.loadBarChart(data)\n          this.loadPieChart(data)\n        } else {\n          this.toastr.error('Unexpected error')\n        }\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1>Dashboard</h1>\n    <div class=\"col-md-6\">Trader Name:&nbsp;&nbsp;<b class=\"nameColor\">{{dashboardData?.consumerData?.traderName}}</b></div>\n\n    <div class=\"row\">\n        <div class=\"row inner-box\">\n            <!-- <div class=\"col-md-6 cin\">CIN No:&nbsp;&nbsp;<b class=\"cinColor\">{{dashboardData?.panNo:}}</b> </div> -->\n        </div><br><br>\n        <!-- Earnings (Monthly) Card Example -->\n        <!-- <div class=\"col-xl-4 col-md-6 mb-4\">\n            <div class=\"card border-left-primary shadow h-100 py-2\">\n                <div class=\"card-body\" style=\"padding-bottom: 0px;\">\n                    <div class=\"row no-gutters align-items-center\">\n                        <div class=\"col mr-2\">\n                            <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\"\n                               >\n                                No of Members</div>\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{dashboardData?.consumerData?.length}}\n                            </div>\n                        </div>\n                        <div class=\"col-auto\">\n                            <i class=\"fa fa-users\" aria-hidden=\"true\" style=\"font-size: xx-large;color: #4e73df;\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> -->\n\n        <!-- Earnings (Annual) Card Example -->\n        <div class=\"col-xl-4 col-md-6 mb-4\">\n            <div class=\"card border-left-success shadow h-100 py-2\">\n                <div class=\"card-body\" style=\"padding-bottom: 0px;\">\n                    <div class=\"row no-gutters align-items-center\">\n                        <div class=\"col mr-2\">\n                            \n                            <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                                No of Commodities</div>\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{dashboardData?.cgProduct?.length}}\n                            </div>\n                        </div>\n                        <div class=\"col-auto\">\n                            <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"\n                                style=\"font-size: xx-large;color: #1cc88a;\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Tasks Card Example -->\n        <div class=\"col-xl-4 col-md-6 mb-4\">\n            <div class=\"card border-left-info shadow h-100 py-2\">\n                <div class=\"card-body\" style=\"padding-bottom: 0px;\">\n                    <div class=\"row no-gutters align-items-center\">\n                        <div class=\"col mr-2\">\n                            <div class=\"text-xs font-weight-bold text-info text-uppercase mb-1\">No of relevant FPOs\n                            </div>\n                            <div class=\"row no-gutters align-items-center\">\n                                <div class=\"col-auto\">\n                                    <div class=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">\n                                        {{dashboardData?.fpoData?.length}}</div>\n                                </div>\n                                <!-- <div class=\"col\">\n                                    <div class=\"progress progress-sm mr-2\">\n                                        <div class=\"progress-bar bg-info\" role=\"progressbar\" style=\"width: 50%\"\n                                            aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                        <div class=\"col-auto\">\n                            <i class=\"fa fa-address-card-o\" aria-hidden=\"true\"\n                                style=\"font-size: xx-large;color: #36b9cc;\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"card bar-chart-example\">\n                <div class=\"card-header d-flex align-items-center\">\n                    <h4>Commodities dealing with</h4>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-2\" *ngFor='let img of dashboardData?.cgProduct'>\n                            <div class=\" card card-col-lg-2\">\n                                <img src='{{serverUrl}}/productsImagesByCG/{{img.productImg}}' alt=\"\"\n                                    style=\"height:162px\">\n                                <div class=\"row1\">\n                                    {{img.itemName.Crop_Name}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/tomato.jpg\" alt=\"\" style=\"height:162px\">\n                <div class=\"row1\">\n                    Tomato<br>\n                    001\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/potato.jpg\" alt=\"\">\n                <div class=\"row1\">\n                    Potato<br>\n                    002\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/cucumber.jpg\" alt=\"\" style=\"height:159px\">\n                <div class=\"row1\">\n                    Cucumber<br>\n                    003\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/cauliflower.jpg\" alt=\"\">\n                <div class=\"row1\">\n                    Cauliflower<br>\n                    004\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/carrot.jpg\" alt=\"\" style=\"height:159px\">\n                <div class=\"row1\">\n                    Carrot<br>\n                    005\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\" card card-col-lg-2\">\n                <img src=\"../../../../assets/img/radish.jpg\" alt=\"\" style=\"height:159px\">\n                <div class=\"row1\">\n                    Radish<br>\n                    006\n                </div>\n            </div>\n        </div> -->\n    </div>\n    <div class=\"row\">\n        <div class=\"card\" style=\"width:1980px;margin-top:25px\">\n            <!-- <h1 class=\"card-head\">List of FPOs Dealing with the selected</h1>\n            <h1 class=\"card-head\"> products nearby your location</h1> -->\n            <div class=\"card-header py-3\">\n                <h3 class=\"m-0 font-weight-bold text-white\" style=\"text-align: center;color: black !important;\"> </h3>\n            </div>\n            <div class=\"card-body table-card mat-elevation-z8\" style=\"padding:0\">\n                <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort>\n                    <ng-container matColumnDef=\"slNo\">\n                        <th mat-header-cell *matHeaderCellDef>Sl No. </th>\n                        <td mat-cell *matCellDef=\"let element; let i = index;\">\n                            {{i+1}}\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"fpoName\">\n                        <th mat-header-cell *matHeaderCellDef> Name </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.fpoName}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"address\">\n                        <th mat-header-cell *matHeaderCellDef> Address </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.FPOData.address}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"mobNo\">\n                        <th mat-header-cell *matHeaderCellDef> Mobile No </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.FPOData.fpoContactNo}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"email\">\n                        <th mat-header-cell *matHeaderCellDef> Email </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.FPOData.fpoMailId}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"yearOfFormation\">\n                        <th mat-header-cell *matHeaderCellDef> Year of formation </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.FPOData.yearOfFormation}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"dateOfReg\">\n                        <th mat-header-cell *matHeaderCellDef> Date of Reg </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.FPOData.dateOfReg}} </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n            <!-- <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Name of FPO</th>\n                        <th scope=\"col\">Address</th>\n                        <th scope=\"col\">Mobile No</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Profile Link</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">Bamunikhol Producer Company Limited</th>\n                        <td>dhol,gabakund,chandanpur,puri</td>\n                        <td>9861210540</td>\n                        <td>bamunikhol@gmail.com</td>\n                        <td><button type=\"button\" class=\"btn btn-outline-success\">Click</button></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">FPO2</th>\n                        <td>Markandeswar Sahi,Puri</td>\n                        <td>7064037715</td>\n                        <td>fpo2@gmail.com</td>\n                        <td><button type=\"button\" class=\"btn btn-outline-success\">Click</button></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">FPO3</th>\n                        <td>Sakhigopal,Puri</td>\n                        <td>9190811920</td>\n                        <td>fpo3@gmail.com</td>\n                        <td><button type=\"button\" class=\"btn btn-outline-success\">Click</button></td>\n                    </tr>\n                </tbody>\n            </table> -->\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"card bar-chart-example\">\n                <div class=\"card-header d-flex align-items-center\">\n                    <h4>Commodity Wise Quantity Available</h4>\n                </div>\n                <div class=\"card-body\">\n                    <canvas id=\"myChart\" height=\"300\"></canvas>\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"col-md-6\">\n            <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n        </div> -->\n        <div class=\"col-lg-6\">\n            <div class=\"card pie-chart-example\">\n                <div class=\"card-header d-flex align-items-center\">\n                    <h4>Commodity Wise Minimum Quantity Dealing In</h4>\n                </div>\n                <div class=\"card-body\">\n                    <!-- <div class=\"chart-container\"> -->\n                        <canvas id=\"piechart\" height=\"300\"></canvas>\n                    <!-- </div> -->\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"col-md-4\">\n            <div class=\"piechart\"></div>\n        </div> -->\n        <!-- <div class=\"col-md-2\" style=\"text-align: right;\">\n            <p><b>Tomato</b><span class=\"dot1\"></span></p>\n            <p><b>Potato</b><span class=\"dot2\"></span></p>\n            <p><b>Cucumber</b><span class=\"dot3\"></span></p>\n            <p><b>Cauliflower</b><span class=\"dot4\"></span></p>\n            <p><b>Carrot</b><span class=\"dot5\"></span></p>\n            <p><b>Radish</b><span class=\"dot6\"></span></p>\n        </div> -->\n\n    </div>\n\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardGuard } from 'src/app/auth/authGuard/auth-guard.guard';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { AddedProductsComponent } from './added-products/added-products.component';\nimport { ApproveConsumerComponent } from './approve-consumer/approve-consumer.component';\nimport { ApprovedConsumersComponent } from './approved-consumers/approved-consumers.component';\nimport { CgDashboardComponent } from './cg-dashboard/cg-dashboard.component';\nimport { ConsumerRegistrationComponent } from './consumer-registration/consumer-registration.component';\nimport { RelevantFposComponent } from './relevant-fpos/relevant-fpos.component';\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full',\n      },\n      {\n        path: 'dashboard',\n        canActivate: [AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component: CgDashboardComponent,\n      },\n      {\n        path:'consumerRegistration',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:ConsumerRegistrationComponent\n      },\n      {\n        path:'approveConsumers',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:ApproveConsumerComponent\n      },\n      {\n        path:'approvedConsumers',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:ApprovedConsumersComponent\n      },\n      {\n        path:'addProduct',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:AddProductComponent\n      },\n      {\n        path:'addedProducts',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:AddedProductsComponent\n      },\n      {\n        path:'relevantFPOs',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:RelevantFposComponent\n      },\n      {\n        path:'updateProfile',\n        canActivate:[AuthGuardGuard],\n        data: { role: ['ConsumerGroup','Trader'] },\n        component:UpdateProfileComponent\n      },\n      \n\n]\n\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n  })\n  export class ConsumerGroupRoutingModule {}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-approve-consumer',\n  templateUrl: './approve-consumer.component.html',\n  styleUrls: ['./approve-consumer.component.css']\n})\nexport class ApproveConsumerComponent implements OnInit {\n\n  dataSource: any\n  displayedColumns: string[] = ['slNo', 'dist', 'csName', 'csMail', 'csMobNo', 'csCity', 'Action'];\n  pagelength = 0\n  @ViewChild(MatPaginator) paginator: any;\n  @ViewChild(MatSort, { static: true }) sort: any\n  csIndexToApprove:any\n  buttonType:any\n\n\n  constructor(private cgServ: ConsumerGroupService, private appServ: AppService, private toastr: ToastrService) {\n    this.dataSource = new MatTableDataSource()\n  }\n\n  ngOnInit(): void {\n    this.getConsumerListToApprove()\n  }\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator; this.dataSource.sort = this.sort\n  }\n\n  getConsumerListToApprove() {\n    this.cgServ.getConsumerListToApprove(this.appServ.cgRefNo).subscribe(\n      data => {\n        this.dataSource.data = data\n        this.pagelength = data.length\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n  getCSIndexToApprove(index:any,buttonType:any){\n    this.csIndexToApprove=index\n    this.buttonType=buttonType\n  }\n\n  approveOrRejectConsumer() {\n    this.cgServ.approveConsumer(this.dataSource.data[this.csIndexToApprove],this.buttonType).subscribe(\n      data => {\n        if (data.status=='approved') {\n          this.getConsumerListToApprove()\n          this.toastr.success('Approved successfully')\n        }else if(data.status=='rejected'){\n          this.toastr.success('Rejection successfull')\n          this.getConsumerListToApprove()\n        }\n        else{\n          this.toastr.warning('Approve unsuccessful')\n        }\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 class=\"h3 mb-0 text-gray-800\"> Approve Consumers</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <!-- <div class=\"card shadow mb-4\"> -->\n                <div class=\"card-header py-3\">\n                    <h6 class=\"m-0 font-weight-bold text-white\"> Consumer details</h6>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length!=0'>\n                    <div style=\"text-align: center;padding: 28px;\">No Data</div>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length==0'>\n                    <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort >\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef>Sl No. </th>\n                            <!-- <td mat-cell *matCellDef=\"let i=index\"> {{i+1}} </td> -->\n\n                            <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"dist\">\n                            <th mat-header-cell *matHeaderCellDef> District </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.csDistName}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csName\">\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerName}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMail\">\n                            <th mat-header-cell *matHeaderCellDef> Mail Id </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerMail}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMobNo\">\n                            <th mat-header-cell *matHeaderCellDef> Mobile No. </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerMobilenumber}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csCity\">\n                            <th mat-header-cell *matHeaderCellDef> City </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.consumerCity}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Action\">\n                            <th mat-header-cell *matHeaderCellDef> Action </th>\n                            <td mat-cell *matCellDef=\"let element;let i = index\">\n                                <button class=\"btn btn-primary\" style=\"margin-right: 7px;\" data-toggle=\"modal\" \n                                data-target=\"#approveConsumer\" (click)='getCSIndexToApprove(i,\"approve\")'>Approve</button>\n                                <button class=\"btn btn-danger\" data-toggle=\"modal\" \n                                data-target=\"#rejectModal\" (click)='getCSIndexToApprove(i,\"reject\")'>Reject</button>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 15,20]\" [length]=\"pagelength\"\n                        showFirstLastButtons ></mat-paginator>\n\n                </div>\n\n                <!-- </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"approveConsumer\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-info\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">Confirmation</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Are you sure to approve this consumer ?</h5>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                    (click)='approveOrRejectConsumer()'>Approve</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"rejectModal\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-danger\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">Confirmation</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Are you sure to reject this consumer ?</h5>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"\n                (click)='approveOrRejectConsumer()'>Reject</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AppService } from 'src/app/app.service';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent implements OnInit {\n\n  constructor(private cgService :ConsumerGroupService, private appServ :AppService,private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.getTrader()\n  }\ntraderData:any\n\n  traderDetailsForm = new FormGroup({\n    traderState: new FormControl(''),\n    districtName: new FormControl(''),\n    traderDistCode: new FormControl(''),\n    traderPin: new FormControl(''),\n    traderCity:new FormControl(''),\n    traderPlot: new FormControl(''),\n    Block: new FormControl(''),\n    \n    Address: new FormControl(''),\n    cgMobNo: new FormControl(''),\n    \n    // Crop_Name: new FormControl([]),\n    \n    traderMail: new FormControl(''),\n    traderLandmark :new FormControl(''),\n    panNo: new FormControl(''),\n    \n\n  })\ngetTrader(){\n  this.cgService.getTrader(this.appServ.cgRefNo ).subscribe(\n    data => {\n\n      this.traderData = data\n     ////////console.log(this.traderData);\n     this.traderDetailsForm.patchValue(this.traderData)\n     \n      \n   \n    }\n  )\n}\n\n\nupdateTrader() {\n  // ////////console.log(this.traderDetailsForm.value,4444);\n  \n  this.cgService.updateTrader(this.appServ.cgRefNo,this.traderDetailsForm.value).subscribe(\n\n      data => {\n         ////////console.log(data,5555555);\n        if (data.msg == 'Updated Successfully') {\n          this.toastr.success(data.msg)         \n        } else {\n          this.toastr.warning(data.msg)\n\n        }\n      }\n    )  \n  }\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" style=\"margin-bottom: 0 !important;\">\n            <h1 class=\"h3 mb-0 text-gray-800\">Trader Profile Update</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <div class=\"card shadow mb-4\">\n                    <div class=\"card-header py-3\">\n                        <h6 class=\"m-0 font-weight-bold text-white\"> Trader details</h6>\n                    </div>\n                    <div class=\"card-body table-card mat-elevation-z8\">\n                        <form class=\"form-horizontal\" [formGroup]='traderDetailsForm' >\n                            <div class=\"row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Mobile Number<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter Mobile Number' class='form-control' formControlName='cgMobNo' minlength=\"10\" maxlength=\"10\" pattern=\"^[7-9][0-9]{9}$\">\n                                    <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].invalid && traderDetailsForm.controls[\"cgMobNo\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.pattern'>\n                                            *Invalid Mobile Number\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Email<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter email' class='form-control' formControlName='traderMail' pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\">\n                                    <div *ngIf='traderDetailsForm.controls[\"traderMail\"].invalid && traderDetailsForm.controls[\"traderMail\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"traderMail\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"traderMail\"].errors?.pattern'>\n                                            *Email is not valid\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Mobile No<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]='10' matInput placeholder='Enter mobile no' class='form-control' formControlName='cgMobNo'>\n                                    <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].invalid && traderDetailsForm.controls[\"cgMobNo\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.minlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.maxlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"cgMobNo\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Alternate Mobile<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]=\"10\" matInput placeholder='Enter alternate mobile no' class='form-control' formControlName='consumerAltmobno'>\n                                    <div *ngIf='traderDetailsForm.controls[\"consumerAltmobno\"].invalid && traderDetailsForm.controls[\"consumerAltmobno\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"consumerAltmobno\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"consumerAltmobno\"].errors?.minlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"consumerAltmobno\"].errors?.maxlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"consumerAltmobno\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\"> State<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter State' class='form-control' formControlName='traderState'>\n                                    <div *ngIf='traderDetailsForm.controls[\"traderState\"].invalid && traderDetailsForm.controls[\"traderState\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"traderState\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\"> District<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter plot no' class='form-control' formControlName='districtName'>\n                                    <div *ngIf='traderDetailsForm.controls[\"districtName\"].invalid && traderDetailsForm.controls[\"districtName\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"districtName\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Block<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter Block' class='form-control' formControlName='Block'>\n                                    <div *ngIf='traderDetailsForm.controls[\"Block\"].invalid && traderDetailsForm.controls[\"Block\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"Block\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                               \n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">City/Village<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter city' class='form-control' formControlName='traderCity'>\n                                    <div *ngIf='traderDetailsForm.controls[\"traderCity\"].invalid && traderDetailsForm.controls[\"traderCity\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"traderCity\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Address<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter landmark' class='form-control' formControlName='Address'>\n                                    <div *ngIf='traderDetailsForm.controls[\"Address\"].invalid && traderDetailsForm.controls[\"Address\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"Address\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">District<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" formControlName='districtName'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option [ngValue]='dist' *ngFor='let dist of allDists'>{{dist.districtName}}</option>\n                                    </select>\n                                    <div *ngIf='traderDetailsForm.controls[\"csDist\"].invalid && traderDetailsForm.controls[\"csDist\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"csDist\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Pin code<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]='6' matInput placeholder='Enter pin code' class='form-control' formControlName='traderPin'>\n                                    <div *ngIf='traderDetailsForm.controls[\"traderPin\"].invalid && traderDetailsForm.controls[\"traderPin\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"traderPin\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"traderPin\"].errors?.maxlength'>\n                                            *Pin code should be of 6 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"traderPin\"].errors?.minlength'>\n                                            *Pin code should be of 6 digit\n                                        </div>\n                                        <div *ngIf='traderDetailsForm.controls[\"traderPin\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Item Name<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" formControlName='itemName'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option [ngValue]=\"item\" >Crop\n                                        </option>\n                                    </select>\n                                    <div *ngIf='traderDetailsForm.controls[\"itemName\"].invalid && traderDetailsForm.controls[\"itemName\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='traderDetailsForm.controls[\"itemName\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div> -->\n                            </div>\n\n                            <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]='!traderDetailsForm.valid' (click)=\"updateTrader()\">UPDATE</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-relevant-fpos',\n  templateUrl: './relevant-fpos.component.html',\n  styleUrls: ['./relevant-fpos.component.css']\n})\nexport class RelevantFposComponent implements OnInit {\n\n  dataSource: any\n  displayedColumns: string[] = ['slNo', 'dist', 'Name', 'csMail', 'csMobNo', 'csCity'];\n  pagelength = 0\n  @ViewChild(MatPaginator) paginator: any;\n  @ViewChild(MatSort, { static: true }) sort: any\n\n  constructor(private appServ:AppService,private cgServ:ConsumerGroupService,private toastr:ToastrService) {\n    this.dataSource = new MatTableDataSource()\n  }\n\n  ngOnInit(): void {\n    this.getFpoListForCg()\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator; this.dataSource.sort = this.sort\n  }\n\n  getFpoListForCg() {\n    this.cgServ.getFpoListForCg(this.appServ.cgRefNo).subscribe(\n      data=>{\n        this.dataSource.data = data\n        this.pagelength = data.length\n      },\n      error=>{\n        this.toastr.error('Unexpected error')\n      }\n    )\n    \n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 class=\"h3 mb-0 text-gray-800\"> Relevant FPOs</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <!-- <div class=\"card shadow mb-4\"> -->\n                <div class=\"card-header py-3\">\n                    <h6 class=\"m-0 font-weight-bold text-white\"> FPO details</h6>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length!=0'>\n                    <div style=\"text-align: center;padding: 28px;\">No Data</div>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length==0'>\n                    <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort >\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef>Sl No. </th>\n                            <!-- <td mat-cell *matCellDef=\"let i=index\"> {{i+1}} </td> -->\n\n                            <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"dist\">\n                            <th mat-header-cell *matHeaderCellDef> District </th>\n                            <td mat-cell *matCellDef=\"let element\">{{element.FPOData?.district}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Name\">\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.fpoName}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMail\">\n                            <th mat-header-cell *matHeaderCellDef> Mail Id </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.FPOData?.fpoMailId}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csMobNo\">\n                            <th mat-header-cell *matHeaderCellDef> Mobile No. </th>\n                            <td mat-cell *matCellDef=\"let element\">{{element.FPOData?.fpoContactNo}}</td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"csCity\">\n                            <th mat-header-cell *matHeaderCellDef> City </th>\n                            <td mat-cell *matCellDef=\"let element\">{{element.FPOData?.block}} </td>\n                        </ng-container>\n\n                        <!-- <ng-container matColumnDef=\"Action\">\n                            <th mat-header-cell *matHeaderCellDef> Action </th>\n                            <td mat-cell *matCellDef=\"let element;let i = index\">\n                                <button class=\"btn btn-primary\" style=\"margin-right: 7px;\" data-toggle=\"modal\" \n                                data-target=\"#approveConsumer\" (click)='getCSIndexToApprove(i,\"approve\")'>Approve</button>\n                                <button class=\"btn btn-danger\" data-toggle=\"modal\" \n                                data-target=\"#rejectModal\" (click)='getCSIndexToApprove(i,\"reject\")'>Reject</button>\n                            </td>\n                        </ng-container> -->\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 15,20]\" [length]=\"pagelength\"\n                        showFirstLastButtons ></mat-paginator>\n\n                </div>\n\n                <!-- </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal fade\" id=\"approveConsumer\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-info\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">Confirmation</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Are you sure to approve this consumer ?</h5>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                    (click)='approveOrRejectConsumer()'>Approve</button>\n            </div>\n        </div>\n    </div>\n</div> -->\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  constructor(private cgService: ConsumerGroupService, private toastr: ToastrService, private appServ: AppService) { }\n\n  ngOnInit(): void {\n    this.getCropCatagory()\n  }\n\n  errorImgSize = false\n  allCropCatagory: any\n  allCrops: any\n  incrementValue: any\n  addProductImg: any\n  Metrics:any\n  getCropCatagory() {\n    this.cgService.getCropCatagory(this.appServ.cgRefNo).subscribe(\n      data => {\n        ////console.log(data,\"response.cat\");\n        \n        this.allCropCatagory = data[0].cat\n        \n      \n      },\n      error => {\n        this.toastr.error('Unexpected error')\n      }\n    )\n  }\n  // @ViewChild(\"productForm\") productForm:any;\n\n  addProductForm = new FormGroup({\n    Catagory: new FormControl('', Validators.required),\n    itemName: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    Unit: new FormControl('', [Validators.required, Validators.pattern('^[0-9].*$')]),\n    minQuantity: new FormControl( 1, Validators.required),\n    estimatedCost: new FormControl('', [Validators.required, Validators.pattern('^[0-9].*$')]),\n    cgRefNo: new FormControl(''),\n    Metrics:new FormControl(''),\n    fakeImgPath: new FormControl('', Validators.required),\n  })\n \n\n  loadCrops() {\n    this.cgService.loadCrops(this.addProductForm.value.Catagory).subscribe(\n      data => {\n        this.allCrops = data\n      },\n      error => {\n        this.toastr.error('Unexpected error')\n      }\n    )\n\n  }\n\n  incrementInQuantity() {\n    let value = parseFloat(this.addProductForm.value.minQuantity) + parseFloat(this.incrementValue)\n    this.addProductForm.patchValue({\n      minQuantity: value\n    })\n  }\n\n  productImgUpload(file: any) {\n    let maxSize = 1024 * 1024 //for 1MB\n    if (file.target.files[0].size > maxSize) {\n      this.errorImgSize = true\n    } else {\n      this.errorImgSize = false\n    }\n    if (file.target.files[0] != undefined) {\n      this.addProductForm.patchValue({\n        fakeImgPath: file.target.files[0].name\n      })\n      this.addProductImg = file.target.files[0]\n    }\n\n    this.addProductForm.controls['fakeImgPath'].updateValueAndValidity()\n  }\n\n  addProductSubmit() {\n    this.addProductForm.patchValue({\n      cgRefNo: this.appServ.cgRefNo\n    })\n\n    const formData = new FormData()\n    formData.append('img', this.addProductImg)\n    formData.append('formValue', JSON.stringify(this.addProductForm.value))\n\n    this.cgService.addProductSubmit(formData).subscribe(\n      data => {\n        if (data.status > 0) {\n          this.toastr.success('Submitted successfully')\n          this.addProductForm.reset()\n          this.addProductForm.clearValidators()\n          this.addProductForm.patchValue({\n            minQuantity: 1,\n            Catagory: '',\n            itemName: '',\n          })\n          this.incrementValue=undefined\n          // this.productForm.resetForm()\n        } else {\n          this.toastr.warning('Unsuccessfull')\n        }\n      },\n      error => {\n        this.toastr.error('Unexpected error')\n      }\n    )\n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" style=\"margin-bottom: 0 !important;\">\n            <h1 class=\"h3 mb-0 text-gray-800\"> Add Commodity</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <div class=\"card shadow mb-4\">\n                    <div class=\"card-header py-3\">\n                        <h6 class=\"m-0 font-weight-bold text-white\"> Number Of Commodities Dealing In</h6>\n                    </div>\n                    <div class=\"card-body table-card mat-elevation-z8\">\n                        <form class=\"form-horizontal\" [formGroup]='addProductForm' (ngSubmit)='addProductSubmit()'>\n                            <div class=\"row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Commodity Category<b> <sup>*</sup> :</b> </label>\n                                    <select class=\"form-control\" (change)='loadCrops()' formControlName='Catagory'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option value=\"{{cat}}\" *ngFor='let cat of allCropCatagory'>{{cat}}</option>\n                                    </select>\n                                    <div *ngIf='addProductForm.controls[\"Catagory\"].invalid && addProductForm.controls[\"Catagory\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"Catagory\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Sub-Category<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" formControlName='itemName'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option [ngValue]=\"item\" *ngFor='let item of allCrops'>{{item.Crop_Name}}\n                                        </option>\n                                    </select>\n                                    <div *ngIf='addProductForm.controls[\"itemName\"].invalid && addProductForm.controls[\"itemName\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"itemName\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Commodity Details<b><sup>*</sup>:</b></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName='description'\n                                        placeholder=\"Enter Commodity Details\">\n                                    <div *ngIf='addProductForm.controls[\"description\"].invalid && addProductForm.controls[\"description\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"description\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Minimum quantity dealing in<b><sup>*</sup>:</b></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName='minQuantity' \n                                        placeholder=\"\">\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Quantity Available<b><sup>*</sup>:</b></label>\n                                    <input type=\"tel\" class=\"form-control\" formControlName='Unit'\n                                        placeholder=\"Enter unit\">\n\n                                    <div *ngIf='addProductForm.controls[\"Unit\"].invalid && addProductForm.controls[\"Unit\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"Unit\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='addProductForm.controls[\"Unit\"].errors?.pattern'\n                                            style=\"color: red;\">\n                                            *Value should be in numbers\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Unit<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" [(ngModel)]=\"Metrics\" formControlName='Metrics'>\n                                        <option value=\"\" disabled selected hidden>SELECT</option>\n                                        <option value=\"KG\">KG</option>\n                                        <option value=\"TONNES\">TONNES</option>\n                                        <option value=\"LITRES\">LITRES</option>\n                                        <option value=\"NUMBERS\">NUMBERS</option>\n                                    </select>\n\n                                </div>\n\n                                <!-- <div class=\"form-group col-md-4\">\n                                    <label for=\"departmentdetail\">Increment<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" [(ngModel)]='incrementValue'\n                                        [ngModelOptions]=\"{standalone: true}\">\n                                        <option selected disabled [ngValue]='undefined'>--Select--</option>\n                                        <option value=\"0.5\">0.5</option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"1.5\">1.5</option>\n                                    </select>\n                                </div>\n                                <div class=\"form-group col-md-2\" style=\"padding: 40px 51px 0px 0;\">\n                                    <button type=\"button\" class=\"btn btn-warning\"\n                                        (click)='incrementInQuantity()'>Increment</button>\n                                </div> -->\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Estimated unit cost(INR/{{Metrics}})<b><sup>*</sup>:</b></label>\n                                    <input type=\"tel\" class=\"form-control\" formControlName='estimatedCost'\n                                        placeholder=\"Enter estimated cost\">\n                                    <div *ngIf='addProductForm.controls[\"estimatedCost\"].invalid && addProductForm.controls[\"estimatedCost\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"estimatedCost\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='addProductForm.controls[\"estimatedCost\"].errors?.pattern'\n                                            style=\"color: red;\">\n                                            *Value should be in numbers\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Status<b><sup>*</sup>:</b></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=''\n                                        placeholder=\"\">\n                                </div> -->\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"fname\">Image <span style=\"color: red;\">*</span> :</label>\n                                    <input class=\"form-control\" type=\"file\" accept=\"image/jpg, image/jpeg\"\n                                        placeholder=\"Enter GSTIN No\" name=\"schemeimage\"\n                                        (change)=\"productImgUpload($event)\" required>\n                                    <div for=\"\" *ngIf='errorImgSize' style=\"font-size: 10px;color:red\">&nbsp;&nbsp;\n                                        **File size should be\n                                        less than\n                                        1MB</div>\n                                    <div *ngIf='addProductForm.controls[\"fakeImgPath\"].invalid && addProductForm.controls[\"fakeImgPath\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='addProductForm.controls[\"fakeImgPath\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]='!addProductForm.valid'>SUBMIT</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-added-products',\n  templateUrl: './added-products.component.html',\n  styleUrls: ['./added-products.component.css']\n})\nexport class AddedProductsComponent implements OnInit {\n\n  dataSource: any\n  displayedColumns: string[] = ['slNo', 'Catagory', 'Name', 'Unit', 'estimatedCost', 'BlockUnblock'];\n  pagelength = 0\n  @ViewChild(MatPaginator) paginator: any;\n  @ViewChild(MatSort, { static: true }) sort: any\n  csIndexToApprove:any\n  buttonType:any\n  color:ThemePalette = 'accent'\n  isChecked:any\n  \n  constructor(private cgServ: ConsumerGroupService, private appServ: AppService, private toastr: ToastrService) {\n    this.dataSource = new MatTableDataSource()\n   }\n\n  ngOnInit(): void {\n    this.getProductsAddedList()\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator; this.dataSource.sort = this.sort\n  }\n\n  getProductsAddedList() {\n    this.cgServ.getProductsAddedList(this.appServ.cgRefNo).subscribe(\n      data => {\n        this.dataSource.data = data\n        this.pagelength = data.length\n      },\n      error => {\n        this.toastr.error('Server error')\n      }\n    )\n  }\n\n  blockUnblockProduct(index:any){\n    let data=this.dataSource.data[index]\n    // data.blockStatus=this.isChecked\n    this.cgServ.blockUnblockProduct(data).subscribe(\n      data=>{\n        if(data.status>0){\n          this.toastr.success('Success')\n        }else{\n          this.toastr.warning('Unsuccess')\n        }\n      },\n      error=>{\n        this.toastr.error('Error')\n      }\n    )\n    \n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 class=\"h3 mb-0 text-gray-800\"> Products added</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <!-- <div class=\"card shadow mb-4\"> -->\n                <div class=\"card-header py-3\">\n                    <h6 class=\"m-0 font-weight-bold text-white\">Products details</h6>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length!=0'>\n                    <div style=\"text-align: center;padding: 28px;\">No Data</div>\n                </div>\n                <div class=\"card-body table-card mat-elevation-z8\" [hidden]='dataSource?.data.length==0'>\n                    <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef>Sl No. </th>\n                            <!-- <td mat-cell *matCellDef=\"let i=index\"> {{i+1}} </td> -->\n\n                            <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Catagory\">\n                            <th mat-header-cell *matHeaderCellDef> Catagory </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.Catagory}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Name\">\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element?.itemName?.Crop_Name}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Unit\">\n                            <th mat-header-cell *matHeaderCellDef> Unit </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.Unit}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"estimatedCost\">\n                            <th mat-header-cell *matHeaderCellDef> Esti. Cost </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.estimatedCost}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"BlockUnblock\">\n                            <th mat-header-cell *matHeaderCellDef> Action </th>\n                            <td mat-cell *matCellDef=\"let element;let i = index\">\n                                <mat-slide-toggle class=\"example-margin\" [color]=\"color\" [(ngModel)]=\"element.blockStatus\" (change)='blockUnblockProduct(i)'>\n                                    {{element.blockStatus==true?\"Unblock\":\"Block\"}}\n                                </mat-slide-toggle>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 15,20]\" [length]=\"pagelength\"\n                        showFirstLastButtons></mat-paginator>\n\n                </div>\n\n                <!-- </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal fade\" id=\"approveConsumer\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-info\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">Confirmation</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Are you sure to approve this consumer ?</h5>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                    (click)='approveOrRejectConsumer()'>Approve</button>\n            </div>\n        </div>\n    </div>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/app.service';\nimport { ConsumerGroupService } from '../consumer-group.service';\n\n@Component({\n  selector: 'app-consumer-registration',\n  templateUrl: './consumer-registration.component.html',\n  styleUrls: ['./consumer-registration.component.css']\n})\nexport class ConsumerRegistrationComponent implements OnInit {\n\n  allDists:any\n\n  constructor(private appServ:AppService,private cgServ:ConsumerGroupService,private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n    this.getAllDist()\n  }\n\n  RegisterConsumerForm = new FormGroup({\n    consumerName: new FormControl('', Validators.required),\n    consumerMail: new FormControl('', [Validators.required,Validators.email]),\n    consumerMobilenumber: new FormControl('', [Validators.required,Validators.maxLength(10),Validators.minLength(10),Validators.pattern('^[0-9]*$')]),\n    consumerAltmobno: new FormControl('', [Validators.required,Validators.maxLength(10),Validators.minLength(10),Validators.pattern('^[0-9]*$')]),\n    consumerPlot: new FormControl('', Validators.required),\n    consumerCity: new FormControl('', Validators.required),\n    consumerLandmark: new FormControl('', Validators.required),\n    csDist: new FormControl('', Validators.required),\n    consumerPin: new FormControl('', [Validators.required,Validators.maxLength(6),Validators.minLength(6),Validators.pattern('^[0-9]*$')]),\n    cgRefNo:new FormControl('')\n  })\n\n  getAllDist(){\n    this.cgServ.getAllDist().subscribe(\n      data=>{\n        this.allDists=data\n      },\n      error=>{\n\n      }\n    )\n  }\n\n  consumerRegisterSubmit(){\n    // ////////console.log(this.RegisterConsumerForm.controls['consumerMobilenumber']);\n    \n    this.RegisterConsumerForm.patchValue({\n      cgRefNo:this.appServ.cgRefNo\n    })\n    this.cgServ.consumerRegisterSubmit(this.RegisterConsumerForm.value).subscribe(\n      data=>{\n        if(data.status>0){\n          this.toastr.success('Submitted successfully')\n          this.RegisterConsumerForm.reset()\n        }else{\n          this.toastr.warning('Submit unsuccessful')\n        }\n      },\n      error=>{\n        this.toastr.error('Unexpected error')\n      }\n    )\n  }\n\n}\n","<div id=\"content\">\n\n\n    <!-- Begin Page Content -->\n    <div class=\"container-fluid\">\n\n        <!-- Page Heading -->\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\" style=\"margin-bottom: 0 !important;\">\n            <h1 class=\"h3 mb-0 text-gray-800\">Consumer Registaration</h1>\n            <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n                        class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n        </div>\n        <div class=\"row\">\n\n            <div class=\"col-lg-12 mb-6\">\n\n                <!-- Illustrations -->\n                <div class=\"card shadow mb-4\">\n                    <div class=\"card-header py-3\">\n                        <h6 class=\"m-0 font-weight-bold text-white\"> Consumer details</h6>\n                    </div>\n                    <div class=\"card-body table-card mat-elevation-z8\">\n                        <form class=\"form-horizontal\" [formGroup]='RegisterConsumerForm' (ngSubmit)='consumerRegisterSubmit()'>\n                            <div class=\"row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Name<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter name' class='form-control' formControlName='consumerName'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerName\"].invalid && RegisterConsumerForm.controls[\"consumerName\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerName\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Email<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter email' class='form-control' formControlName='consumerMail'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerMail\"].invalid && RegisterConsumerForm.controls[\"consumerMail\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMail\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMail\"].errors?.email'>\n                                            *Email is not valid\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Mobile No<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]='10' matInput placeholder='Enter mobile no' class='form-control' formControlName='consumerMobilenumber'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerMobilenumber\"].invalid && RegisterConsumerForm.controls[\"consumerMobilenumber\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMobilenumber\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMobilenumber\"].errors?.minlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMobilenumber\"].errors?.maxlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerMobilenumber\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Alternate Mobile<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]=\"10\" matInput placeholder='Enter alternate mobile no' class='form-control' formControlName='consumerAltmobno'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerAltmobno\"].invalid && RegisterConsumerForm.controls[\"consumerAltmobno\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerAltmobno\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerAltmobno\"].errors?.minlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerAltmobno\"].errors?.maxlength'>\n                                            *Mobile number should be of 10 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerAltmobno\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Plot No<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter plot no' class='form-control' formControlName='consumerPlot'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerPlot\"].invalid && RegisterConsumerForm.controls[\"consumerPlot\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerPlot\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">City<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter city' class='form-control' formControlName='consumerCity'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerCity\"].invalid && RegisterConsumerForm.controls[\"consumerCity\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerCity\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Landmark<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" matInput placeholder='Enter landmark' class='form-control' formControlName='consumerLandmark'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerLandmark\"].invalid && RegisterConsumerForm.controls[\"consumerLandmark\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerLandmark\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">District<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" formControlName='csDist'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option [ngValue]='dist' *ngFor='let dist of allDists'>{{dist.districtName}}</option>\n                                    </select>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"csDist\"].invalid && RegisterConsumerForm.controls[\"csDist\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"csDist\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"concernedDepartment\">Pin code<b> <sup>*</sup> :</b> </label>\n                                    <input type=\"text\" [maxlength]='6' matInput placeholder='Enter pin code' class='form-control' formControlName='consumerPin'>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"consumerPin\"].invalid && RegisterConsumerForm.controls[\"consumerPin\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerPin\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerPin\"].errors?.maxlength'>\n                                            *Pin code should be of 6 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerPin\"].errors?.minlength'>\n                                            *Pin code should be of 6 digit\n                                        </div>\n                                        <div *ngIf='RegisterConsumerForm.controls[\"consumerPin\"].errors?.pattern'>\n                                            *Only numbers are allowed\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6\">\n                                    <label for=\"departmentdetail\">Item Name<b><sup>*</sup>:</b></label>\n                                    <select class=\"form-control\" formControlName='itemName'>\n                                        <option value=\"\" disabled selected>--Select--</option>\n                                        <option [ngValue]=\"item\" >Crop\n                                        </option>\n                                    </select>\n                                    <div *ngIf='RegisterConsumerForm.controls[\"itemName\"].invalid && RegisterConsumerForm.controls[\"itemName\"].touched'\n                                        style=\"color: red;\">\n                                        <div *ngIf='RegisterConsumerForm.controls[\"itemName\"].errors?.required'>\n                                            *Required\n                                        </div>\n                                    </div>\n                                </div> -->\n                            </div>\n\n                            <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]='!RegisterConsumerForm.valid'>SUBMIT</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}